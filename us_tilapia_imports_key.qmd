---
title: "Example: U.S. tilapia imports"
format: html
editor: visual
execute:
  warning: false
  message: false
---

```{r}
library(tidyverse)
library(here)
library(janitor)
```

Let's read and explore the data.

```{r}
us_tilapia_imports <- read_csv(here::here("data", "us_tilapia_imports.csv"))

summary(us_tilapia_imports)
names(us_tilapia_imports)
dim(us_tilapia_imports)
```

Next, let's get the data in tidy form with `pivot_longer()`:

```{r}
tilapia_imports_df <- us_tilapia_imports %>% 
  pivot_longer(cols = -country,
               names_to = "year",
               values_to = "volume") %>%
  mutate(year = as.numeric(year)) # coerce year to numeric
```

And use `group_by()` and `summarize()` to find the total U.S. tilapia imports by year.

```{r}
yearly_tilapia_tot <- tilapia_imports_df %>%
  group_by(year) %>%
  summarize(total_imports = sum(volume, na.rm = TRUE),
            .groups = 'drop')
```

Create a plot for the total U.S. tilapia imports. Save plot using **here** package.
```{r}
ggplot(data = yearly_tilapia_tot,
       aes(x = year,
           y = total_imports)) +
  geom_line() +
  labs(x = "Year",
       y = "Total Imports")

ggsave(here::here("figs", "yearly_tilapia_tot.png"),
       height = 5, width = 8)
```

Let's now create a subset for import countries, Ecuador, Honduras, Costa Rica, and Mexico.

```{r}
tilapia_subset <- filter(tilapia_imports_df,
                         country == "Ecuador" |
                           country == "Honduras" |
                           country == "Costa Rica" |
                           country == "Mexico") %>% drop_na()
```

And a plot for the subset. Save plot using **here** package.
```{r}
ggplot(data = tilapia_subset,
       aes(x = year,
           y = volume)) +
  geom_line(aes(color = country)) +
  labs(x = "Year",
       y = "Total Imports")

ggsave(here::here("figs", "subset_tilapia_imports.png"),
       height = 5, width = 8)
```

### Citation

Data from the USDA Economic Research Service, provided by Professor Allison Horst for the EDS 221: Scientific Programming Essentials course from the Master of Environmental Data Science program at the Bren School of Environmental Science & Management.
